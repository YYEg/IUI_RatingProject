# Generated by Django 5.1.5 on 2025-03-09 07:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievment_groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, null=True)),
                ('description', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Pub_Grief',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('has_levels', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Pub_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Achievment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField(null=True)),
                ('number', models.CharField(max_length=20)),
                ('name', models.CharField(db_index=True, max_length=300)),
                ('meas_unit', models.CharField(max_length=100)),
                ('meas_unit_score', models.FloatField(default=0.0)),
                ('verif_doc_info', models.CharField(max_length=1000)),
                ('is_pub', models.BooleanField(default=False)),
                ('has_publication', models.BooleanField(default=False)),
                ('has_conference', models.BooleanField(default=False)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='teachersRating.achievment_groups')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('parentName', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=500, null=True)),
                ('position', models.CharField(max_length=500, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teachersRating.department')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(max_length=50, verbose_name='role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachersRating.department')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachersRating.employee')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pub_Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('pub_grief', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teachersRating.pub_grief')),
            ],
        ),
        migrations.CreateModel(
            name='Employee_Achievment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meas_unit_val', models.CharField(max_length=50)),
                ('score', models.FloatField(default=0.0)),
                ('full_achivment_name', models.CharField(max_length=1000)),
                ('verif_doc', models.FileField(blank=True, null=True, upload_to='verification_documents/')),
                ('verif_link', models.CharField(max_length=2000, null=True)),
                ('pub_language', models.CharField(blank=True, max_length=50, null=True)),
                ('ru_full_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('pub_doi', models.CharField(blank=True, max_length=200, null=True)),
                ('pub_authors_employees', models.CharField(blank=True, max_length=1000, null=True)),
                ('pub_authors_students', models.CharField(blank=True, max_length=1000, null=True)),
                ('pub_out_authors', models.CharField(blank=True, max_length=1000, null=True)),
                ('bibliographic_desc', models.CharField(blank=True, max_length=1000, null=True)),
                ('conference_name', models.CharField(blank=True, max_length=200, null=True)),
                ('conference_status', models.CharField(blank=True, max_length=50, null=True)),
                ('conference_date', models.DateField()),
                ('publication_name', models.CharField(blank=True, max_length=200, null=True)),
                ('publicator', models.CharField(blank=True, max_length=200, null=True)),
                ('publication_data', models.DateField()),
                ('publication_year_vol_num', models.CharField(blank=True, max_length=200, null=True)),
                ('reciving_date', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('achievment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teachersRating.achievment')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teachersRating.employee')),
                ('pub_grief', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachersRating.pub_grief')),
                ('pub_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachersRating.pub_level')),
                ('pub_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='teachersRating.pub_type')),
            ],
        ),
    ]
